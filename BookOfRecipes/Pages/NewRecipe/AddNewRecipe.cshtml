@page
@model BookOfRecipes.Pages.NewRecipe.AddNewRecipeModel
@{
}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/tinymce/tinymce.min.js"></script>
<script src="~/js/textarea.js"></script>

<h3 align="center" style="color:darkred">@Html.ValidationMessage("DuplicateRecipe")</h3>

<form method="post" id="myForm">
    <div class="row mb-4 justify-content-center">
        <div class="col-2 d-flex align-items-center">
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" role="switch" id="isMetricCheckbox">
                <label id="flexSwitchCheckChecked" class="form-check-label" for="isMetricCheckbox">Metrické jednotky</label>
            </div>
        </div>
        <div class="col-3 d-flex align-items-center">
            <input class="form-control me-2" type="text" name="Recipe.NameOfRecipe" asp-for="Recipe.NameOfRecipe" placeholder="Název receptu..." />
            <span asp-validation-for="Recipe.NameOfRecipe" class="text-danger"></span>
        </div>
        <div class="col-3 d-flex align-items-center">
            <input class="form-control me-2" type="text" name="Recipe.Author" asp-for="Recipe.Author" placeholder="Autor..." />
            <span asp-validation-for="Recipe.Author" class="text-danger"></span>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col d-flex align-items-center">
            <div class="mx-auto text-center">
                <textarea id="default" asp-for="Recipe.Directions" placeholder="Postup..."></textarea>
                <span asp-validation-for="Recipe.Directions" class="text-danger"></span>
            </div>
        </div>
    </div>
    
    <br>
    <h4 class="text-center">Ingredience</h4>
    <br>

    <input value="1" type="hidden" disabled="disabled" id="index" />
    <div id="rowContainer" style="margin: 0 auto;">
        <div id="newRow[0]" class="row mb-2 justify-content-center">
            <div class="col-2">
                <select class="form-select" id="ingredientsIDs[0]" name="ingredientIDQuantity[0].Key" asp-items="Model.Options"></select>
            </div>
            <div class="col-2">
                <input class="form-control" type="number" name="ingredientIDQuantity[0].Value" placeholder="Množství" min="0"/>
                <span asp-validation-for="ingredientIDQuantity" class="text-danger"></span>
            </div>
            <div class="col-2">
                <select asp-items="Model.UnitOptions" id="unitSelect[0]" class="unitSelect form-select" name="unitSelect[0]">
                    <option value="0">Jednotka</option>
                </select>
                <span asp-validation-for="unitSelect" class="text-danger"></span>
            </div>
            <div class="col-2">
                <button class="btn btn-danger" type="button" id="removeBtn[0]" onclick="RemoveRow(this)">Odebrat ingredienci</button>
            </div>   
        </div>
    </div>
    <div class="row-cols-2 text-center mt-5">
        <button class="btn btn-info" type="button" id="addRow" onclick="Add()">Přidat ingredienci</button>
    </div> 
    <div class="row-cols-4 text-center mt-5">
        <input class="btn btn-success btn-lg" type="submit" value="Uložit">
    </div>
         
</form>


@section Scripts {
    
    <script>
        function Add() {
            let index = document.getElementById("index");
            let div = document.getElementById("rowContainer");

            //newRow Container
            let newDiv = document.createElement("div");
            newDiv.id = "newRow[" + index.value + "]";
            newDiv.className = "row mb-2 justify-content-center";

            //container for ingredient select
            let ingSelectDiv = document.createElement("div");
            ingSelectDiv.className = "col-2";
            
            let newSelect = document.createElement("select");
            newSelect.name = "ingredientIDQuantity[" + index.value + "].Key";
            newSelect.className = "form-select";

            //container for quantity input
            let quantityInputtDiv = document.createElement("div");
            quantityInputtDiv.className = "col-2";

            let newInput = document.createElement("input")
            newInput.name = "ingredientIDQuantity[" + index.value + "].Value";
            newInput.className = "form-control"
            newInput.setAttribute("placeholder", "Množství");
            newInput.setAttribute("type", "number");
            newInput.setAttribute("min", "0");


            //container for unit select
            let unitSelectDiv = document.createElement("div");
            unitSelectDiv.className = "col-2";

            let newUnitSelect = document.createElement('select');
            newUnitSelect.name = "unitSelect[" + index.value + "]";
            newUnitSelect.className = "unitSelect form-select";

            //container for btn remove
            let btnRemoveDiv = document.createElement("div");
            btnRemoveDiv.className = "col-2";

            let newRemoveBtn = document.createElement("button");
            newRemoveBtn.textContent = "Odebrat ingredienci";
            newRemoveBtn.id = "removeBtn[" + index.value + "]";
            newRemoveBtn.setAttribute('onclick', 'RemoveRow(this)');
            newRemoveBtn.className = "btn btn-danger";
            

            var sourceDropdown = document.getElementById("ingredientsIDs[0]");

            for (var i = 0; i < sourceDropdown.options.length; i++) {
                var option = sourceDropdown.options[i];
                var newOption = document.createElement('option');
                newOption.value = option.value;
                newOption.text = option.text;
                newSelect.appendChild(newOption)
            }

            var sourceDropdown2 = document.getElementById("unitSelect[0]");

            for (var i = 0; i < sourceDropdown2.options.length; i++) {
                var option = sourceDropdown2.options[i];
                var newOption = document.createElement('option');
                newOption.value = option.value;
                newOption.text = option.text;
                newUnitSelect.appendChild(newOption)
            }

            div.appendChild(newDiv);
            newDiv.append(ingSelectDiv, quantityInputtDiv, unitSelectDiv, btnRemoveDiv);
            ingSelectDiv.appendChild(newSelect);
            quantityInputtDiv.appendChild(newInput);
            unitSelectDiv.appendChild(newUnitSelect);
            btnRemoveDiv.appendChild(newRemoveBtn);

            //newDiv.appendChild(newSelect);
            //newDiv.appendChild(newInput);
            //newDiv.appendChild(newUnitSelect);
            //newDiv.appendChild(newRemoveBtn);
            index.value++;
        }

        function RemoveRow(button){
            if (button.parentElement.parentElement == document.getElementById("newRow[0]")) {
                console.log("Cannot remove!!");
            } else {
                button.parentElement.parentElement.remove();
            }     
        }

    </script>

    <script>
        $('#isMetricCheckbox').change(function (){
            var isMetric = $(this).is(':checked');
            console.log(isMetric);
            console.log(typeof isMetric);
            $('.unitSelect').html('<option>Jednotka</option>');
            console.log("Here I am");
            $.getJSON('/newrecipe/addnewrecipe?handler=Unit', { isMetric: isMetric }, function (data) {
                console.log(data);
                $.each(data, function(key, value) {
                    var option = $('<option></option>').attr('value', value.id).text(value.unit);
                    $('.unitSelect').append(option);
                });
            });
        });

    </script>

    <script>
            $('#isMetricCheckbox').change(function () {
                var isChecked = $(this).prop('checked');
                var label = isChecked ? 'Imperialni jednotky' : 'Metrické jednotky';
                $('#flexSwitchCheckChecked').text(label);
            });
    </script>
}